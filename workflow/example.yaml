name: CI/CD Workflow

on: [push, pull_request]

env:
  APP_ID: 'demo' # You didn't provide this in the environment, it should be defined somewhere
  MAIL_ID: 'chenna.m@getster.tech'
  REMOTE_HOST: 'root@49.50.69.62'
  SSH_PORT: '2235'
  # Ensure DOCKER_IMAGE and REMOTE_PATH are correctly assigned if these variables are needed elsewhere
  DOCKER_IMAGE: "ghcr.io/testimages/demoapi" # Using hardcoded APP_ID for the demo
  REMOTE_PATH: "/root/getster-apps/demo" # Using hardcoded APP_ID for the demo
  K8S_FILE: "demoapi.yaml" # Using hardcoded APP_ID for the demo
  PATTERN: "image: ghcr.io/testimages/demoapi:" # Make sure this is the correct pattern to replace in your k8s file
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # - name: Install npm dependencies and build
    #   run: |
    #     npm install
    #     npm run build

    - name: Setup SSH and Get Current Version
      run: |
        current_version=$(ssh -p $SSH_PORT $REMOTE_HOST "grep -oP '$PATTERN\\K.*' $REMOTE_PATH/$K8S_FILE")
        new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++; print}')
        new_version="v$new_version"
        echo "CURRENT_VERSION=$current_version" >> $GITHUB_ENV
        echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
        # Update Docker image and Kubernetes deployment steps go here

    - name: Get Current Version and Set New Version
      run: |
        current_version=$(ssh -o StrictHostKeyChecking=no -p $SSH_PORT $REMOTE_HOST "grep -oP '${PATTERN}\\K.*' $REMOTE_PATH/$K8S_FILE")
        new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++; print}')
        new_version="v$new_version"
        echo "CURRENT_VERSION=$current_version" >> $GITHUB_ENV
        echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

    - name: Update Docker image and Push to Registry
      run: |
        cp dockerfile dist/
        cp package.json dist/
        cp .env dist/
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" > dist/.env
        docker build --build-arg MysqlPassword=${{ secrets.MYSQL_PASSWORD }} -t $DOCKER_IMAGE:${{ env.NEW_VERSION }} dist/
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push $DOCKER_IMAGE:${{ env.NEW_VERSION }}

    - name: Update Kubernetes Deployment
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
        chmod 600 ssh_key
        ssh-add ssh_key
        ssh -o StrictHostKeyChecking=no -p $SSH_PORT $REMOTE_HOST "sed -i 's|${PATTERN}.*|${PATTERN}${{ env.NEW_VERSION }}|g' $REMOTE_PATH/$K8S_FILE"
        ssh -o StrictHostKeyChecking=no -p $SSH_PORT $REMOTE_HOST "kubectl apply -f $REMOTE_PATH/$K8S_FILE"

    # Add any additional steps like notifications, etc.